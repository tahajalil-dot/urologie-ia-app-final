import streamlit as st
import base64

st.set_page_config(page_title="Assistant IA - Urologie (AFU)", layout="wide")

st.title("üß† Assistant IA - Urologie (AFU)")
st.markdown("""
Bienvenue dans l'assistant intelligent pour la d√©cision clinique en urologie. 
S√©lectionnez une pathologie dans le menu de gauche pour g√©n√©rer une recommandation selon les guidelines **AFU**.
""")

menu = st.sidebar.selectbox("üìÇ Choisissez une pathologie :", [
    "Page d'accueil",
    "Hypertrophie b√©nigne de la prostate (HBP)",
    "Lithiase urinaire",
    "Cancer de la prostate",
    "Cancer du rein",
    "Cancer de la vessie (TVNIM / TVIM)",
    "Patient porteur de sonde double J",
    "Tumeurs des voies excr√©trices sup√©rieures (TVES)"
])

if menu == "Page d'accueil":
    st.info("Veuillez s√©lectionner une pathologie dans le menu pour commencer.")

# MODULE HBP
if menu == "Hypertrophie b√©nigne de la prostate (HBP)":
    st.header("üî∑ Hypertrophie b√©nigne de la prostate (HBP)")
    age = st.number_input("√Çge", min_value=40, max_value=100)
    atcd = st.multiselect("Ant√©c√©dents urologiques", [
    "R√©tention urinaire aigu√´",
    "Infections urinaires r√©cidivantes",
    "Calculs v√©sicaux",
    "H√©maturie r√©cidivante",
    "Alt√©ration de la fonction r√©nale li√©e √† l‚Äôobstacle",
    "√âchec de traitement m√©dical"
])
    ipss = st.slider("Score IPSS", 0, 35)
    volume = st.number_input("Volume prostatique √† l‚Äô√©chographie (cc)", min_value=10.0)
    psa = st.number_input("PSA total (ng/mL)", min_value=0.0)
    if 4 <= psa <= 10:
            residu = st.number_input("R√©sidu post-mictionnel (mL)", min_value=0.0)
    actif = st.radio("Activit√© sexuelle ?", ["Oui", "Non"])
    enfant = st.radio("Souhaite avoir des enfants ?", ["Oui", "Non"])
    marie = st.radio("Statut marital", ["Mari√©", "C√©libataire"])

    if st.button("üîé G√©n√©rer la conduite √† tenir - HBP"):
        reco = []

        if psa < 4:
            diagnostic = "HBP probable"
        elif 4 <= psa <= 10:
            densite = psa / volume if volume > 0 else 0
            if densite > 0.15:
                diagnostic = f"Suspicion d‚ÄôADK prostatique ‚Üí IRM + biopsies"
                reco.append(f"üîç Justification : Densit√© prostatique √©lev√©e > 0.15 (densit√© = {densite:.2f}) ‚Üí exploration compl√©mentaire recommand√©e selon AFU")
            else:
                diagnostic = f"HBP probable"
                reco.append(f"‚ÑπÔ∏è Densit√© prostatique < 0.15 (densit√© = {densite:.2f}) ‚Üí compatible avec HBP selon AFU")
        else:
            diagnostic = "Suspicion forte d‚ÄôADK prostatique ‚Üí IRM + biopsies"

        reco.append(f"üß¨ Diagnostic : {diagnostic}")

        if diagnostic.startswith("HBP"):
            if any(x in atcd for x in ["√âchec de traitement m√©dical", "Alt√©ration de la fonction r√©nale li√©e √† l‚Äôobstacle"]):
                pass
            else:
                if ipss <= 7:
                    reco.append("‚úÖ Abstention th√©rapeutique + r√®gles hygi√©no-di√©t√©tiques :")
                    reco.append("- Diminuer la caf√©ine et alcool")
                    reco.append("- √âviter la r√©tention prolong√©e")
                    reco.append("- Uriner r√©guli√®rement")
                elif ipss > 7:
                    if actif == "Oui" or enfant == "Oui":
                        reco.append("üíä Traitement m√©dical par alpha-bloquant (ex. tamsulosine)")
                        reco.append("‚ÑπÔ∏è Justification : vie sexuelle active ou d√©sir d‚Äôenfant ‚Üí √©viter inhibiteurs de la 5Œ±-r√©ductase")
                    else:
                        reco.append("üíä Inhibiteur de la 5Œ±-r√©ductase (ex. finast√©ride)")
                        reco.append("‚ÑπÔ∏è Justification : pas de vie sexuelle active ni d√©sir d‚Äôenfant ‚Üí inhibiteur possible")
                
            if any(x in atcd for x in [
                "R√©tention urinaire aigu√´",
                "Infections urinaires r√©cidivantes",
                "Calculs v√©sicaux",
                "H√©maturie r√©cidivante",
                "Alt√©ration de la fonction r√©nale li√©e √† l‚Äôobstacle",
                "√âchec de traitement m√©dical"
            ]):
                if volume < 30:
                    reco.append("üîß Traitement chirurgical : incision cervico-prostatique")
                    reco.append("‚ÑπÔ∏è Justification : volume < 30 cc et complication pr√©sente")
                elif 30 <= volume <= 70:
                    reco.append("üîß Traitement chirurgical : RTUP")
                    reco.append("‚ÑπÔ∏è Justification : volume entre 30 et 70 cc avec complication")
                else:
                    reco.append("üîß Traitement chirurgical : ad√©nomectomie voie endoscopique ou ouverte")
                    reco.append("‚ÑπÔ∏è Justification : volume > 70 cc avec complication ou √©chec m√©dical")

        st.markdown("### üß† Recommandation IA - HBP")
        for r in reco:
            st.markdown(r)
        rapport = "\n".join(reco)
        b64 = base64.b64encode(rapport.encode()).decode()
        href = f'<a href="data:file/txt;base64,{b64}" download="recommandation_HBP_AFU.txt">üì• T√©l√©charger cette recommandation</a>'
        st.markdown(href, unsafe_allow_html=True)

# MODULE LITHIASE
if menu == "Lithiase urinaire":
    st.header("üî∑ Lithiase urinaire")
    age = st.number_input("√Çge", min_value=18, max_value=100)
    localisation = st.selectbox("Localisation du calcul", ["Calice sup√©rieur", "Calice moyen", "Calice inf√©rieur", "Bassinet", "Uret√®re proximal", "Uret√®re distal"])
    taille = st.slider("Taille du calcul (mm)", 1, 40)
    densite = st.number_input("Densit√© au scanner (UH)", min_value=100)
    nombre = st.selectbox("Nombre de calculs", ["Unique", "Multiple"])
    grossesse = st.radio("Patiente enceinte ?", ["Oui", "Non"])
    rein_unique = st.radio("Rein unique ?", ["Oui", "Non"])
    colique = st.radio("Colique n√©phr√©tique en cours ?", ["Oui", "Non"])

    if st.button("üîé G√©n√©rer la conduite √† tenir - Lithiase"):
        reco = []

        if colique == "Oui":
            reco.append("üö® Colique n√©phr√©tique ‚Üí antalgie, hydratation, √©ventuelle pose de JJ en urgence")
        else:
            # Recommandations AFU selon taille, localisation et densit√©
            if grossesse == "Oui" or rein_unique == "Oui":
                reco.append("üî∂ Patiente enceinte ou rein unique ‚Üí URS en priorit√©")

            if taille <= 10:
                if densite < 1000:
                    reco.append("üí† ESWL en 1√®re intention si localisation favorable")
                else:
                    reco.append("üî∏ URS pr√©f√©r√©e si densit√© > 1000 UH")
            elif 10 < taille <= 20:
                if localisation in ["Calice inf√©rieur", "Bassinet"]:
                    reco.append("üî∑ Mini-NLPC pr√©f√©rable en cas de localisation peu favorable")
                else:
                    reco.append("üî∑ URS en 1√®re intention si localisation favorable")
            elif taille > 20:
                if nombre == "Multiple":
                    reco.append("üü• NLPC combin√©e √† URS en cas de calculs complexes ou multiples")
                else:
                    reco.append("üî¥ NLPC seule si volume > 20 mm et acc√®s favorable")

            if taille > 30:
                reco.append("üî¥ Calcul > 3 cm ‚Üí NLPC possible OU chirurgie ouverte/laparoscopique selon anatomie et contexte")
            if taille > 30 or localisation in ["Calice inf√©rieur"]:
                reco.append("‚ö†Ô∏è Chirurgie ouverte ou laparoscopique si √©chec traitements endo-urologiques ou anatomie d√©favorable")

        reco.append("üìå R√®gles hygi√©no-di√©t√©tiques pour pr√©venir la r√©cidive :")
        reco.append("- Boire au moins 2,5L/j")
        reco.append("- R√©duire sel, prot√©ines animales")
        reco.append("- √âviter exc√®s oxalates")
        for r in reco:
            st.markdown(r)
        rapport = "\n".join(reco)
        b64 = base64.b64encode(rapport.encode()).decode()
        href = f'<a href="data:file/txt;base64,{b64}" download="recommandation_LITHIASE_AFU.txt">üì• T√©l√©charger cette recommandation</a>'
        st.markdown(href, unsafe_allow_html=True)

# MODULE CANCER VESSIE - Nouvelle version enrichie
if menu == "Cancer de la vessie (TVNIM / TVIM)":
    st.header("üî∑ Cancer de la vessie")
    age = st.number_input("√Çge du patient", min_value=18, max_value=100)
    hematurie = st.radio("H√©maturie macroscopique ?", ["Oui", "Non"])
    nombre_tumeurs = st.selectbox("Nombre de tumeurs", ["Unique", "Multiple"])
    taille = st.slider("Taille de la plus grande tumeur (mm)", 1, 100)
    cis = st.radio("Pr√©sence de CIS ?", ["Oui", "Non"])
    grade = st.selectbox("Grade tumoral", ["Bas grade", "Haut grade"])
    stade = st.selectbox("Stade tumoral", ["pTa", "pT1", "pT2 ou plus"])
    recidive = st.radio("R√©cidive ?", ["Oui", "Non"])
    metastases = st.radio("M√©tastases √† distance ?", ["Oui", "Non"])

    if st.button("üîé G√©n√©rer la conduite √† tenir - Vessie"):
        reco = []

        # D√©termination du risque selon AFU
        if stade == "pTa" and grade == "Bas grade" and nombre_tumeurs == "Unique" and taille < 30 and cis == "Non" and recidive == "Non":
            risque = "faible"
        elif stade == "pTa" and grade == "Bas grade" and (nombre_tumeurs == "Multiple" or recidive == "Oui"):
            risque = "interm√©diaire"
        elif stade == "pT1" or grade == "Haut grade" or cis == "Oui":
            risque = "haut"
        elif stade == "pT2 ou plus":
            risque = "tr√®s haut"
        else:
            risque = "non class√©"

        reco.append(f"üìä Risque estim√© : **{risque.upper()}**")

        # Conduite √† tenir
        if risque == "faible":
            reco.append("üíß Instillation unique de mitomycine dans les 6h post RTUV")
            reco.append("üìÜ Surveillance cystoscopie √† 3 mois, puis tous les 6 mois")
        elif risque == "interm√©diaire":
            reco.append("üíâ BCG 1 an OU mitomycine hebdomadaire x6 + entretien")
            reco.append("üìÜ Surveillance cystoscopie √† 3 mois, 6 mois, puis tous les 6 mois")
        elif risque == "haut":
            reco.append("üíâ BCG th√©rapeutique sur 3 ans (induction + entretien)")
            reco.append("üîÑ Second look √† 4-6 semaines si pT1 ou incertitude")
            reco.append("üìÜ Surveillance rapproch√©e : cystoscopie tous les 3 mois la 1√®re ann√©e")
        elif risque == "tr√®s haut":
            reco.append("‚ö†Ô∏è Indication de cystectomie totale si envahissement musculaire confirm√©")
            reco.append("üìä Bilan d‚Äôextension : TDM TAP, scintigraphie osseuse / TEP scan")
            reco.append("üìÜ RCP indispensable avant d√©cision")

        if metastases == "Oui":
            reco.append("üö® Tumeur m√©tastatique ‚Üí chimioth√©rapie ou immunoth√©rapie selon statut PD-L1")
            reco.append("üìÜ Suivi oncologique sp√©cialis√©")

        st.markdown("### üß† Recommandation IA - Cancer de la vessie")
        for r in reco:
            st.markdown(r)
        rapport = "\n".join(reco)
        b64 = base64.b64encode(rapport.encode()).decode()
        href = f'<a href="data:file/txt;base64,{b64}" download="recommandation_VESSIE_AFU.txt">üì• T√©l√©charger cette recommandation</a>'
        st.markdown(href, unsafe_allow_html=True)

# MODULE CANCER DE LA PROSTATE
if menu == "Cancer de la prostate":
    st.header("üî∑ Cancer de la prostate")
    st.subheader("üß© Donn√©es g√©n√©rales")
    age = st.number_input("√Çge du patient", min_value=40, max_value=100)
    psa = st.number_input("PSA total (ng/mL)", min_value=0.0, step=0.1)
    volume = st.number_input("Volume prostatique (cc)", min_value=10.0, step=1.0)
    tr = st.selectbox("R√©sultat du toucher rectal", ["Normal", "Indur√© unilat√©ral", "Indur√© bilat√©ral", "Suspect diffus"])
    pirads = st.selectbox("Score PIRADS de l‚ÄôIRM", ["PIRADS 1", "PIRADS 2", "PIRADS 3", "PIRADS 4", "PIRADS 5"])
    esperance = st.radio("Esp√©rance de vie > 10 ans ?", ["Oui", "Non"])

    st.subheader("üî¨ R√©sultat biopsie")
    gleason = st.selectbox("Score de Gleason", ["3+3", "3+4", "4+3", "4+4", "Autre ‚â• 8"])
    tnm = st.selectbox("Stade clinique T", ["T1c", "T2a", "T2b", "T2c", "T3", "T4"])
    vesi = st.radio("Envahissement des v√©sicules s√©minales ?", ["Oui", "Non"])

    st.subheader("üß™ Bilan d‚Äôextension")
    metastases = st.radio("Pr√©sence de m√©tastases ?", ["Non", "Oui - Oligo (<4)", "Oui - Pluri (>4)"])
    site_met = st.multiselect("Localisation des m√©tastases", ["Ganglionnaire", "Osseuse", "Pulmonaire", "H√©patique", "C√©r√©brale"])

    if st.button("üîé G√©n√©rer la conduite √† tenir - Prostate"):
        reco = []

        # D√©termination du risque (localis√©)
        if gleason == "3+3": g = 6
        elif gleason == "3+4": g = 7
        elif gleason == "4+3": g = 7
        elif gleason == "4+4": g = 8
        else: g = 9

        if metastases == "Non":
            if psa < 10 and g == 6 and tnm in ["T1c", "T2a"]:
                risque = "faible"
            elif psa >= 20 or g >= 8 or tnm in ["T2c", "T3", "T4"]:
                risque = "√©lev√©"
            else:
                risque = "interm√©diaire"

            reco.append(f"üìä Risque estim√© : **{risque.upper()}** selon la classification de D'Amico (AFU)")
            reco.append("üîç Le score de D‚ÄôAmico repose sur 3 crit√®res : PSA, Gleason, et stade clinique.")
            reco.append("- üü¢ Faible risque : les 3 crit√®res suivants sont TOUS pr√©sents ‚Üí PSA < 10, Gleason ‚â§ 6, T1c‚ÄìT2a")
            reco.append("- üü† Risque interm√©diaire : au moins un crit√®re ‚Üí PSA 10‚Äì20, Gleason 7, T2b")
            reco.append("- üî¥ Risque √©lev√© : un SEUL crit√®re suffit ‚Üí PSA > 20, Gleason ‚â• 8, T2c ou plus")
            if risque == "faible":
                reco.append("üü¢ Crit√®res : PSA < 10, Gleason ‚â§ 6, stade T1c-T2a")
            elif risque == "interm√©diaire":
                reco.append("üü† Crit√®re : PSA 10‚Äì20, Gleason = 7, ou stade T2b")
            else:
                reco.append("üî¥ Crit√®re : PSA > 20, Gleason ‚â• 8, ou stade ‚â• T2c")

            if esperance == "Non":
                reco.append("üõë Esp√©rance de vie < 10 ans ‚Üí Surveillance ou hormonoth√©rapie")
            else:
                if risque == "faible":
                    reco.append("‚úÖ Surveillance active OU prostatectomie / radioth√©rapie")
                    reco.append("‚ÑπÔ∏è Justification : Cancer localis√© √† faible risque ‚Üí toutes options possibles selon √¢ge, comorbidit√©s et souhait du patient (AFU)")
                elif risque == "interm√©diaire":
                    reco.append("üî∂ Prostatectomie avec curage pelvien ou Radioth√©rapie + HT courte (6 mois)")
                    reco.append("‚ÑπÔ∏è Justification : Risque interm√©diaire ‚Üí strat√©gie combin√©e selon recommandations AFU")
                else:
                    reco.append("üî¥ Prostatectomie + curage √©tendu ou Radioth√©rapie + HT longue (18-36 mois)")
                    reco.append("‚ÑπÔ∏è Justification : Risque √©lev√© ‚Üí traitement intensif recommand√© selon les guidelines AFU")
                    reco.append("‚úÖ Surveillance active OU prostatectomie / radioth√©rapie")
                reco.append("‚ÑπÔ∏è Justification : Cancer localis√© √† faible risque ‚Üí toutes options possibles selon √¢ge, comorbidit√©s et souhait du patient (AFU)")
                elif risque == "interm√©diaire":
                    reco.append("üî∂ Prostatectomie avec curage pelvien ou Radioth√©rapie + HT courte (6 mois)")
                reco.append("‚ÑπÔ∏è Justification : Risque interm√©diaire ‚Üí strat√©gie combin√©e selon recommandations AFU")
                else:
                    reco.append("üî¥ Prostatectomie + curage √©tendu ou Radioth√©rapie + HT longue (18-36 mois)")
                reco.append("‚ÑπÔ∏è Justification : Risque √©lev√© ‚Üí traitement intensif recommand√© selon les guidelines AFU")

            if tnm in ["T3", "T4"] or vesi == "Oui":
                reco.append("‚ö†Ô∏è Forme localement avanc√©e : curage + HT prolong√©e + radioth√©rapie")

        else:
            reco.append("üö® Forme m√©tastatique")
            if metastases == "Oui - Oligo (<4)":
                reco.append("üîπ Oligo-m√©tastatique ‚Üí Traitement local possible + HT ¬± doc√©taxel")
            else:
                reco.append("üîª Pluri-m√©tastatique ‚Üí HT de castration +")
                reco.append("- Doc√©taxel si tol√©r√©")
                reco.append("- Ou anti-androg√®ne de nouvelle g√©n√©ration (abirat√©rone, enzalutamide)")

            if "Osseuse" in site_met:
                reco.append("ü¶¥ Consid√©rer ajout d‚Äôos-protecteurs (acide zol√©dronique ou d√©nosumab)")

        st.markdown("### üß† Recommandation IA (AFU) - Cancer de la prostate")
        for r in reco:
            st.markdown(r)
        rapport = "\n".join(reco)
        b64 = base64.b64encode(rapport.encode()).decode()
        href = f'<a href="data:file/txt;base64,{b64}" download="recommandation_PROSTATE_AFU.txt">üì• T√©l√©charger cette recommandation</a>'
        st.markdown(href, unsafe_allow_html=True)

# MODULE SONDE DOUBLE J
if menu == "Patient porteur de sonde double J":
    st.header("üî∑ Patient porteur de sonde double J")

    age = st.number_input("√Çge du patient", min_value=18, max_value=100)
    indication = st.selectbox("Indication de pose", ["Lithiase", "St√©nose ur√©t√©rale", "Post-chirurgie", "Tumeur ur√©t√©rale", "Colique n√©phr√©tique", "Sepsis urinaire"])
    date_pose = st.date_input("Date de pose de la sonde")
    duree_prevue = st.slider("Dur√©e pr√©vue de port (semaines)", min_value=1, max_value=12, value=6)
    atcd_infection = st.radio("Ant√©c√©dent d'infection urinaire ?", ["Oui", "Non"])

    st.subheader("üîç Sympt√¥mes actuels")
    fievre = st.radio("Fi√®vre ?", ["Oui", "Non"])
    douleurs = st.radio("Douleurs lombaires / sus-pubiennes ?", ["Oui", "Non"])
    hematurie = st.radio("H√©maturie ?", ["Oui", "Non"])
    dysurie = st.radio("Troubles urinaires (br√ªlures, urgences) ?", ["Oui", "Non"])
    sepsis = st.radio("Tableau de sepsis actuel ?", ["Oui", "Non"])

    if st.button("üîé G√©n√©rer la conduite √† tenir - Sonde double J"):
        reco = []
        reco.append("üìÖ Dur√©e recommand√©e maximale : 6 √† 8 semaines")

        if fievre == "Oui" or douleurs == "Oui" or sepsis == "Oui":
            reco.append("üö® Sympt√¥mes d'alerte ‚Üí r√©√©valuation en urgence n√©cessaire")
            reco.append("üîÅ Envisager un changement ou retrait anticip√© de la sonde")
            reco.append("üíä Antibioth√©rapie probabiliste en attendant ECBU")

        reco.append("üìå Conseils hygi√©no-di√©t√©tiques :")
        reco.append("- Boire abondamment pour limiter la stagnation urinaire")
        reco.append("- √âviter les efforts physiques intenses")
        reco.append("- Consulter en cas de douleurs inhabituelles, fi√®vre ou h√©maturie persistante")

        reco.append("üìÜ Suivi : Contr√¥le avant la date limite de retrait / remplacement de la sonde")

        st.markdown("### üß† Recommandation IA - Patient porteur de sonde JJ")
        for r in reco:
            st.markdown(r)
        rapport = "\n".join(reco)
        b64 = base64.b64encode(rapport.encode()).decode()
        href = f'<a href="data:file/txt;base64,{b64}" download="recommandation_SONDE_JJ.txt">üì• T√©l√©charger cette recommandation</a>'
        st.markdown(href, unsafe_allow_html=True)

# MODULE CANCER TVES
if menu == "Tumeurs des voies excr√©trices sup√©rieures (TVES)":
    st.header("üî∑ Tumeurs des voies excr√©trices sup√©rieures (TVES)")
    age = st.number_input("√Çge du patient", min_value=18, max_value=100)
    hematurie = st.radio("H√©maturie macroscopique ?", ["Oui", "Non"])
    douleurs = st.radio("Douleurs lombaires ?", ["Oui", "Non"])
    imagerie = st.radio("Aspect suspect √† l‚Äôimagerie (uroTDM ou uroIRM) ?", ["Oui", "Non"])
    localisation = st.selectbox("Localisation de la l√©sion", ["Bassinet", "Calices", "Uret√®re proximal", "Uret√®re distal"])
    taille = st.slider("Taille de la l√©sion (mm)", min_value=1, max_value=100)
    multifocal = st.radio("Pr√©sence de l√©sions multifocales ?", ["Oui", "Non"])
    rein_unique = st.radio("Rein unique fonctionnel ou anatomique ?", ["Oui", "Non"])
    biopsie = st.selectbox("R√©sultat de la biopsie ur√©t√©rale ou du lavage urinaire", ["Bas grade", "Haut grade", "Non r√©alis√©"])
    metastases = st.radio("Pr√©sence de m√©tastases ?", ["Oui", "Non"])

    if st.button("üîé G√©n√©rer la conduite √† tenir - TVES"):
        reco = []

        if metastases == "Oui":
            reco.append("üî¥ Tumeur m√©tastatique : traitement syst√©mique recommand√©")
            reco.append("üíä Chimioth√©rapie √† base de sels de platine (cisplatine si fonction r√©nale OK)")
            reco.append("üìÜ √âvaluation en RCP d'oncologie urologique")
        else:
            if biopsie == "Haut grade" or taille > 20 or multifocal == "Oui":
                reco.append("üî∫ Haut risque ‚Üí n√©phro-ur√©t√©rectomie totale (NUT) avec ablation du m√©at ur√©t√©ral")
            elif biopsie == "Bas grade" and taille <= 20 and multifocal == "Non":
                if rein_unique == "Oui":
                    reco.append("üü° Pr√©servation n√©cessaire ‚Üí traitement conservateur par endoscopie (surveillance rapproch√©e)")
                else:
                    reco.append("üü¢ Tumeur bas grade localis√©e ‚Üí ablation endoscopique possible + surveillance")
            else:
                reco.append("‚ö†Ô∏è Cas non classifiable, discussion en RCP indispensable")

            reco.append("üìä Bilan compl√©mentaire : scanner TAP + cystoscopie de contr√¥le")
            reco.append("üß™ Cytologie urinaire de surveillance tous les 3 √† 6 mois selon le grade")

        st.markdown("### üß† Recommandation IA (AFU) - Tumeurs des voies excr√©trices sup√©rieures")
        for r in reco:
            st.markdown(r)
        rapport = "\n".join(reco)
        b64 = base64.b64encode(rapport.encode()).decode()
        href = f'<a href="data:file/txt;base64,{b64}" download="recommandation_TVES_AFU.txt">üì• T√©l√©charger cette recommandation</a>'
        st.markdown(href, unsafe_allow_html=True)

# MODULE CANCER DU REIN
# Inclut recommandations avanc√©es : classification TNM, traitements selon MSKCC, options sujet fragile
if menu == "Cancer du rein":
    st.header("üî∑ Cancer du rein")
    age = st.number_input("√Çge du patient", min_value=18, max_value=100, step=1)
    hematurie = st.radio("H√©maturie pr√©sente ?", ["Oui", "Non"])
    douleur = st.radio("Douleur lombaire ?", ["Oui", "Non"])
    masse_palpable = st.radio("Masse palpable ?", ["Oui", "Non"])
    taille = st.slider("Taille de la tumeur (cm)", min_value=1, max_value=20)
    later = st.radio("C√¥t√© atteint", ["Droit", "Gauche"])
    metastases = st.radio("Pr√©sence de m√©tastases ?", ["Oui", "Non"])

    if metastases == "Oui":
        st.subheader("Formulaire MSKCC (cancer du rein m√©tastatique)")
        karnofsky = st.radio("Score de Karnofsky < 80% ?", ["Oui", "Non"])
        diag_delai = st.radio("Intervalle < 1 an entre diagnostic et traitement ?", ["Oui", "Non"])
        anemia = st.radio("An√©mie pr√©sente ?", ["Oui", "Non"])
        hypercalc = st.radio("Hypercalc√©mie ?", ["Oui", "Non"])
        neutros = st.radio("Polynucl√©ose neutrophile ?", ["Oui", "Non"])
        thrombose = st.radio("Thrombocytose ?", ["Oui", "Non"])

    if st.button("üîé G√©n√©rer la conduite √† tenir - Rein"):
        reco = []

        if metastases == "Non":
            # Stade T selon taille
            if taille <= 4:
                stade_t = "T1a"
            elif 4 < taille <= 7:
                stade_t = "T1b"
            else:
                stade_t = "T2 ou plus"
            reco.append(f"üìå Stade T estim√© : {stade_t}")

            # Propositions selon taille
            if taille <= 4:
                reco.append("üü¢ Petite tumeur localis√©e (< 4 cm) : n√©phrectomie partielle (voie robot-assist√©e si possible)")
                if age > 80:
                    reco.append("üõë Sujet fragile : discuter ablation percutan√©e ou surveillance active si comorbidit√©s majeures")
            elif 4 < taille <= 7:
                reco.append("üü° Tumeur interm√©diaire (4-7 cm) : n√©phrectomie partielle si faisable, sinon totale selon balance b√©n√©fices/risques (AFU)")
            else:
                reco.append("üî¥ Tumeur > 7 cm : n√©phrectomie totale recommand√©e + curage si ganglions visibles")

            reco.append("üìä R√©aliser un scanner TAP ou IRM pour bilan d'extension")
            if taille <= 4:
                reco.append("üü¢ Petite tumeur localis√©e (< 4 cm) : n√©phrectomie partielle (voie robot-assist√©e si possible)")
            elif 4 < taille <= 7:
                reco.append("üü° Tumeur interm√©diaire (4-7 cm) : N√©phrectomie partielle si faisable, sinon totale selon balance b√©n√©fices/risques (AFU)")
            else:
                reco.append("üî¥ Tumeur > 7 cm : n√©phrectomie totale recommand√©e + curage si ganglions visibles")
            reco.append("üìä R√©aliser un scanner TAP ou IRM pour bilan d'extension")

        else:
            nb_facteurs = sum([
                karnofsky == "Oui",
                diag_delai == "Oui",
                anemia == "Oui",
                hypercalc == "Oui",
                neutros == "Oui",
                thrombose == "Oui"
            ])

            if nb_facteurs == 0:
                risque = "bon pronostic"
            elif nb_facteurs <= 2:
                risque = "interm√©diaire"
            else:
                risque = "mauvais pronostic"

            reco.append(f"üß™ Score MSKCC : {nb_facteurs} facteur(s) ‚Üí **{risque.upper()}**")

            if risque in ["bon pronostic", "interm√©diaire"]:
                reco.append("üîÑ Option de n√©phrectomie cytor√©ductrice √† discuter en RCP si √©tat g√©n√©ral stable")

            if risque == "bon pronostic":
                reco.append("üíä Traitement recommand√© : Double immunoth√©rapie (Nivolumab + Ipilimumab) OU Sunitinib")
            elif risque == "interm√©diaire":
                reco.append("üíä Traitement recommand√© : Association TKI + Anti-PD1 (ex. Cabozantinib + Nivolumab)")
            else:
                reco.append("üíä Traitement recommand√© : TKI seul (Pazopanib, Sunitinib) ou combinaison si tol√©r√©e")

            reco.append("üìö Histologie √† pr√©ciser apr√®s chirurgie : cellules claires, papillaire, chromophobe, etc.")
            reco.append("üìÜ Suivi rapproch√© en RCP sp√©cialis√©e")
            reco.append("- Inhibiteurs de tyrosine kinase (TKI)")
            reco.append("- Immunoth√©rapie (anti-PD1/PD-L1) si √©ligible")
            reco.append("- Combinations selon profil mol√©culaire (nivolumab + cabozantinib, etc.)")

            reco.append("üìÜ Suivi rapproch√© en RCP sp√©cialis√©e")

        st.markdown("### üß† Recommandation IA (AFU) - Cancer du rein")
        for r in reco:
            st.markdown(r)
        rapport = "\n".join(reco)
        b64 = base64.b64encode(rapport.encode()).decode()
        href = f'<a href="data:file/txt;base64,{b64}" download="recommandation_REIN_AFU.txt">üì• T√©l√©charger cette recommandation</a>'
        st.markdown(href, unsafe_allow_html=True)
