import streamlit as st
import base64
from typing import List, Dict

# --- CONFIG ---
st.set_page_config(page_title="Assistant IA - Urologie (AFU)", layout="wide")

# --- Utils ---
def download_text_button(filename: str, content: str, label: str = "üì• T√©l√©charger la recommandation"):
    b64 = base64.b64encode(content.encode()).decode()
    href = f'<a href="data:file/txt;base64,{b64}" download="{filename}">{label}</a>'
    st.markdown(href, unsafe_allow_html=True)


def bullet(lines: List[str]) -> None:
    for x in lines:
        st.markdown(x)

# --- Evidence (texte court, pour tra√ßabilit√©) ---
AFU = "üìö AFU 2024‚Äì2026"

# --- TVNIM: Risk stratification ---
def classify_tvnim_risk(stage: str, grade: str, number: str, size_mm: int, cis: bool, recidive: bool,
                        lvi: bool, urethral_prostatic: bool) -> str:
    """Retourne faible / interm√©diaire / haut / tr√®s haut.
    Logique align√©e AFU (simplifi√©e pour app)."""
    # Tr√®s haut risque
    if stage == "pT1" and grade == "Haut grade" and (
        cis or number == "Multiple" or size_mm > 30 or lvi or urethral_prostatic or recidive
    ):
        return "tr√®s haut"
    # Haut risque
    if stage == "pT1" or grade == "Haut grade" or cis:
        return "haut"
    # Interm√©diaire
    if stage == "pTa" and grade == "Bas grade" and (number == "Multiple" or recidive or size_mm >= 30):
        return "interm√©diaire"
    # Faible
    if stage == "pTa" and grade == "Bas grade" and number == "Unique" and size_mm < 30 and not cis and not recidive:
        return "faible"
    # Par d√©faut
    return "interm√©diaire"


# --- TVNIM: CAT d√©taill√©e (traitement + surveillance) ---
def tvnim_plan(risk: str, ipop_ok: bool) -> Dict[str, List[str]]:
    plan: Dict[str, List[str]] = {"traitement": [], "surveillance": [], "notes": []}

    # Traitement
    if risk == "faible":
        plan["traitement"] += [
            "‚úÖ RTUV de qualit√© (d√©trusor pr√©sent)",
            ("üíß IPOP (MMC/√©pirubicine/gemcitabine) <2h post-RTUV" if ipop_ok else "‚ö†Ô∏è IPOP non r√©alis√©e (CI: h√©maturie/perforation)"),
            f"{AFU} : IPOP seule, pas d'entretien",
        ]
        plan["surveillance"] += [
            "üìÖ Cystoscopie √† 3 mois, 12 mois, puis annuelle √ó5 ans",
            "üß™ Cytologie non syst√©matique",
        ]
    elif risk == "interm√©diaire":
        plan["traitement"] += [
            "‚úÖ RTUV de qualit√© (second look si doute de r√©section)",
            "üíâ Chimioth√©rapie endov√©sicale (1√®re intention) ‚Äî 6‚Äì8 instillations hebdo",
            "   ‚Ä¢ Mitomycine C 40 mg/40 mL OU √âpirubicine 50 mg OU Gemcitabine 1000 mg",
            f"{AFU} : entretien non syst√©matique (√† discuter si r√©cidives)",
            "üîÅ Alternative : BCG induction + entretien 1 an (si haut risque de r√©cidive)",
        ]
        plan["surveillance"] += [
            "üìÖ Cystoscopie √† 3 et 6 mois, puis /6 mois √ó2 ans, puis annuelle √ó10 ans",
            "üß™ Cytologie associ√©e aux cystoscopies",
        ]
    elif risk == "haut":
        plan["traitement"] += [
            "‚úÖ RTUV de qualit√© + second look si pT1 ou pas de d√©trusor",
            "ü¶† BCG (induction 6 instillations) + entretien 3 ans (sch√©ma 3/6/12 mois puis /6 mois)",
            f"{AFU} : ne pas r√©duire dose ni dur√©e",
            "üîÅ Si CI/√©chec BCG : chimio endov√©sicale (MMC/gemcitabine ¬± doc√©taxel)",
        ]
        plan["surveillance"] += [
            "üìÖ Cystoscopie /3 mois √ó2 ans, puis /6 mois jusqu‚Äô√† 5 ans, puis annuelle √† vie",
            "üß™ Cytologie syst√©matique",
            "üñ•Ô∏è Uro-TDM annuel (risque TVES)",
        ]
    elif risk == "tr√®s haut":
        plan["traitement"] += [
            "‚ö†Ô∏è pT1 haut grade avec facteurs aggravants",
            "ü¶† BCG complet (3 ans) OU cystectomie pr√©coce avec curage",
            "ü´± RCP indispensable pour d√©cision partag√©e",
        ]
        plan["surveillance"] += [
            "üìÖ Cystoscopie /3 mois √ó2 ans, puis /6 mois jusqu‚Äô√† 5 ans, puis annuelle √† vie",
            "üß™ Cytologie syst√©matique",
            "üñ•Ô∏è Uro-TDM annuel (haut risque TVES)",
        ]
    return plan


# --- TVIM: CAT d√©taill√©e (traitement + surveillance) ---
def tvim_plan(metastases: bool, cis_eligible: bool, t2_localise: bool, cis_diffus: bool,
              hydroureteronephrose: bool, bonne_fonction_v: bool, pdl1_pos: bool,
              post_op_high_risk: bool, neo_adjuvant_fait: bool) -> Dict[str, List[str]]:
    plan: Dict[str, List[str]] = {"traitement": [], "surveillance": [], "notes": []}

    if metastases:
        plan["traitement"] += [
            "üß¨ TVIM m√©tastatique",
            "1 ≥·µâ ligne : Enfortumab vedotin + Pembrolizumab",
            "Alternatives : Cis/Gem + Nivolumab; ou Pt-based (Cis/Carbo) ‚Üí maintenance Avelumab",
            f"{AFU} : adapter au statut FGFR (Erdafitinib en 2·µâ ligne si mut FGFR2/3)",
        ]
        plan["surveillance"] += [
            "üìÖ Scanner TAP /6‚Äì8 semaines en induction puis selon r√©ponse",
        ]
        return plan

    # Non m√©tastatique
    if cis_eligible:
        plan["traitement"] += [
            "üíä Chimioth√©rapie n√©oadjuvante cisplatine (dd-MVAC√ó6 ou Gem/Cis√ó4)",
            "üî™ Cystectomie radicale + curage ganglionnaire standard",
            "üíß D√©rivation : n√©ovessie si ur√®tre n√©gatif sinon Bricker",
            f"{AFU} : gain SG ~8% √† 5 ans avec n√©oadjuvant",
        ]
    else:
        plan["traitement"] += [
            "üî™ Cystectomie radicale + curage ganglionnaire standard (non √©ligible cisplatine)",
        ]

    # Option pr√©servation v√©sicale (TTM) si profils favorables
    if t2_localise and not cis_diffus and not hydroureteronephrose and bonne_fonction_v:
        plan["traitement"] += [
            "üí° Option conservatrice (TTM) : RTUV compl√®te + radioth√©rapie + chimio concomitante",
            "   ‚Ä¢ Protocoles concomitants : 5-FU/mitomycine, cisplatine ou gemcitabine faible dose",
            "   ‚Ä¢ Cystectomie de rattrapage en cas d'√©chec (‚âà15‚Äì20%)",
        ]

    # Post-op adjuvant
    if post_op_high_risk and not neo_adjuvant_fait:
        plan["traitement"] += [
            "‚ûï Chimioth√©rapie adjuvante (cisplatine) si pT3‚Äì4 et/ou pN+ et pas de n√©oadjuvant",
        ]
    if pdl1_pos:
        plan["traitement"] += [
            "üõ°Ô∏è Immunoth√©rapie adjuvante : Nivolumab si PD-L1 positif (CheckMate 274)",
        ]

    # Surveillance
    plan["surveillance"] += [
        "üìÖ Apr√®s cystectomie : Uro-TDM + TDM thorax /6 mois √ó2‚Äì3 ans puis annuel",
        "üîé Surveillance ur√©trale si ur√®tre conserv√© (rythme selon facteurs de risque)",
        "üß™ Suivi fonction r√©nale + d√©pistage TVES",
    ]

    if t2_localise and not cis_diffus and not hydroureteronephrose and bonne_fonction_v:
        plan["surveillance"] += [
            "üìÖ Apr√®s TTM : Cystoscopie + cytologie /3 mois √ó2 ans, puis /6 mois jusqu‚Äô√† 5 ans, puis annuel √† vie",
            "üñ•Ô∏è Scanner TAP /3‚Äì6 mois √ó2 ans, puis /6 mois jusqu‚Äô√† 5 ans, puis annuel",
        ]

    plan["notes"] += [
        "üè• RAAC recommand√© (optimisation p√©ri-op√©ratoire)",
        "ü´± D√©cision partag√©e patient (qualit√© de vie, d√©rivation, fertilit√©)",
        AFU,
    ]

    return plan


# --- UI ---
st.title("üß† Assistant IA - Urologie (AFU)")
st.markdown(
    """
Bienvenue dans l'assistant d‚Äôaide √† la d√©cision en urologie align√© **AFU 2024‚Äì2026**.
> **Avertissement** : outil d‚Äôaide √† la d√©cision; la responsabilit√© finale appartient au clinicien.
"""
)

menu = st.sidebar.selectbox(
    "üìÇ Choisissez un module :",
    [
        "Page d'accueil",
        "Cancer de la vessie (TVNIM / TVIM)",
        "Hypertrophie b√©nigne de la prostate (HBP)",
        "Lithiase urinaire",
        "Cancer de la prostate",
        "Cancer du rein",
        "Patient porteur de sonde double J",
        "Tumeurs des voies excr√©trices sup√©rieures (TVES)",
    ],
)

if menu == "Page d'accueil":
    st.info("Veuillez s√©lectionner une pathologie dans le menu pour commencer.")

# === MODULE VESSIE (TVNIM/TVIM) ‚Äî Version am√©lior√©e ===
if menu == "Cancer de la vessie (TVNIM / TVIM)":
    st.header("üî∑ Cancer de la vessie ‚Äì TVNIM / TVIM")

    with st.form("vessie_form"):
        st.subheader("üìå Donn√©es anatomopathologiques (de base)")
        stade = st.selectbox("Stade tumoral", ["pTa", "pT1", "pT2 ou plus"])  # pT2+=TVIM
        grade = st.selectbox("Grade tumoral", ["Bas grade", "Haut grade"])
        cis = st.radio("Pr√©sence de CIS ?", ["Non", "Oui"], horizontal=True) == "Oui"
        number_basic = st.selectbox("Nombre de tumeurs", ["Unique", "Multiple"])
        size_basic = st.slider("Taille de la plus grande l√©sion (mm)", 1, 100, 15)

        # Afficher les blocs avanc√©s UNIQUEMENT si pT2+ OU (pT1 avec indication potentielle √† la cystectomie)
        pt1_cysto_suspect = (stade == "pT1" and grade == "Haut grade" and (number_basic == "Multiple" or size_basic >= 30 or cis))
        show_advanced = (stade == "pT2 ou plus") or pt1_cysto_suspect

        if show_advanced:
            st.subheader("üîé Facteurs avanc√©s (affich√©s car indication potentielle de cystectomie)")
            recidive = st.radio("R√©cidive ?", ["Non", "Oui"], horizontal=True) == "Oui"
            lvi = st.radio("Envahissement lymphovasculaire ?", ["Non", "Oui"], horizontal=True) == "Oui"
            urethral = st.radio("Atteinte ur√®tre prostatique ?", ["Non", "Oui"], horizontal=True) == "Oui"
        else:
            # Valeurs par d√©faut non aggravantes si non affich√©es
            recidive = False
            lvi = False
            urethral = False

        # Contexte clinique TVNIM seulement (IPOP) ‚Äì reste masqu√© pour TVIM ou pT1 cystectomie
        if stade in ["pTa", "pT1"] and not show_advanced:

    if submitted:
        reco_lines: List[str] = []
        if stade in ["pTa", "pT1"]:  # TVNIM
            risque = classify_tvnim_risk(
                stage=stade, grade=grade, number=nombre, size_mm=taille, cis=cis,
                recidive=recidive, lvi=lvi, urethral_prostatic=urethral
            )
            plan = tvnim_plan(risque, ipop_ok)
            st.subheader(f"üß† Recommandation IA ‚Äî TVNIM ({risque.upper()})")
            st.markdown("### üíä Traitement")
            bullet(plan["traitement"])
            st.markdown("### üìÖ Surveillance")
            bullet(plan["surveillance"])
            if plan["notes"]:
                st.markdown("### üìù Notes")
                bullet(plan["notes"])

            reco_lines += [
                f"TVNIM ‚Äî Risque: {risque}",
                "Traitement:" , *plan["traitement"],
                "Surveillance:", *plan["surveillance"],
                *(["Notes:"] + plan["notes"] if plan["notes"] else []),
            ]

        else:  # pT2 ou plus => TVIM
            plan = tvim_plan(
                metastases=metastases, cis_eligible=cis_eligible,
                t2_localise=t2_localise, cis_diffus=cis_diffus,
                hydroureteronephrose=hydro, bonne_fonction_v=bonne_fct,
                pdl1_pos=pdl1_pos, post_op_high_risk=post_op_high_risk,
                neo_adjuvant_fait=neo_adjuvant_fait,
            )
            st.subheader("üß† Recommandation IA ‚Äî TVIM")
            st.markdown("### üíä Traitement")
            bullet(plan["traitement"])
            st.markdown("### üìÖ Surveillance")
            bullet(plan["surveillance"])
            if plan["notes"]:
                st.markdown("### üìù Notes")
                bullet(plan["notes"])

            reco_lines += [
                "TVIM ‚Äî Plan:",
                "Traitement:", *plan["traitement"],
                "Surveillance:", *plan["surveillance"],
                *(["Notes:"] + plan["notes"] if plan["notes"] else []),
            ]

        st.divider()
        st.markdown("### üìÑ Export")
        download_text_button("recommandation_VESSIE_AFU.txt", "\n".join(reco_lines))

# === Les autres modules restent disponibles (placeholder / v1) ===
if menu == "Hypertrophie b√©nigne de la prostate (HBP)":
    st.header("üî∑ Hypertrophie b√©nigne de la prostate (HBP)")
    st.info("Module HBP √† refactorer comme TVNIM/TVIM avec r√®gles et suivi d√©taill√©s (alpha-bloquants, 5-ARI, chirurgie selon volume/complications).")

if menu == "Lithiase urinaire":
    st.header("üî∑ Lithiase urinaire")
    st.info("Module lithiase √† adapter (taille, UH, localisation, grossesse, rein unique, colique; ESWL/URS/NLPC + pr√©vention r√©cidive).")

if menu == "Cancer de la prostate":
    st.header("üî∑ Cancer de la prostate")
    st.info("Module prostate √† structurer (stratification D‚ÄôAmico, HT, RT, chirurgie, m√©tastatique).")

if menu == "Cancer du rein":
    st.header("üî∑ Cancer du rein")
    st.info("Module rein √† structurer (Bosniak, tailles, MSKCC/IMDC, options chirurgicales/syst√©miques).")

if menu == "Patient porteur de sonde double J":
    st.header("üî∑ Patient porteur de sonde double J")
    st.info("Rappels : dur√©e 6‚Äì8 semaines, sympt√¥mes d‚Äôalerte (fi√®vre, douleurs), ECBU, changement anticip√© si sepsis.")

if menu == "Tumeurs des voies excr√©trices sup√©rieures (TVES)":
    st.header("üî∑ TVES")
    st.info("Bas/Haut risque, endoscopie vs NUT, suivi (cysto, cytologie, imagerie).")
