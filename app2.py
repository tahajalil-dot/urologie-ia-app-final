from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
from reportlab.lib.styles import getSampleStyleSheet
import io

def stratifier_tvnim(stade, grade, taille, nombre):
    # Classification AFU
    if stade == "pTa" and grade == "Bas grade" and taille < 30 and nombre == "Unique":
        return "faible"
    if stade == "pTa" and grade == "Bas grade":
        return "interm√©diaire"
    if stade == "pT1" or grade == "Haut grade" or nombre in ["Multiple", "Papillomatose v√©sicale"]:
        # crit√®res tr√®s haut risque
        if stade == "pT1" and grade == "Haut grade" and (taille > 30 or nombre != "Unique"):
            return "tr√®s haut"
        return "haut"
    return "interm√©diaire"

def plan_tvnim(risque):
    traitement, suivi = [], []
    if risque == "faible":
        traitement = [
            "RTUV compl√®te de qualit√© (d√©trusor pr√©sent)",
            "Instillation postop√©ratoire pr√©coce (IPOP) si pas de CI"
        ]
        suivi = [
            "Cystoscopie √† 3 et 12 mois puis annuelle √ó5 ans",
            "Cytologie : non syst√©matique",
            "Uro-TDM : non syst√©matique"
        ]
    elif risque == "interm√©diaire":
        traitement = [
            "RTUV compl√®te",
            "Instillations endov√©sicales de chimioth√©rapie (MMC, √©pirubicine, gemcitabine) 6‚Äì8 instillations",
            "Alternative : BCG avec entretien 12 mois"
        ]
        suivi = [
            "Cystoscopie √† 3 et 6 mois, puis tous les 6 mois √ó2 ans, puis annuelle (‚â•10 ans)",
            "Cytologie syst√©matique",
        ]
    elif risque == "haut":
        traitement = [
            "RTUV compl√®te ¬± second look si pT1 ou muscle absent",
            "Instillations endov√©sicales BCG : induction 6 instillations + entretien 3 ans",
            "Si CI ou √©chec BCG : chimio endov√©sicale (MMC, gemcitabine ¬± doc√©taxel)"
        ]
        suivi = [
            "Cystoscopie tous les 3 mois √ó2 ans, puis tous les 6 mois jusqu‚Äô√† 5 ans, puis annuelle √† vie",
            "Cytologie syst√©matique",
            "Uro-TDM annuel recommand√©"
        ]
    else:  # tr√®s haut
        traitement = [
            "RTUV compl√®te",
            "Instillations endov√©sicales BCG avec entretien 3 ans",
            "‚ö†Ô∏è Option : cystectomie pr√©coce avec curage ganglionnaire √©tendu"
        ]
        suivi = [
            "Cystoscopie tous les 3 mois √ó2 ans, puis tous les 6 mois jusqu‚Äô√† 5 ans, puis annuelle √† vie",
            "Cytologie syst√©matique",
            "Uro-TDM annuel obligatoire"
        ]
    return traitement, suivi

def render_tvnim_page():
    btn_home_and_back(show_back=True)
    st.header("üî∑ TVNIM (tumeur v√©sicale n‚Äôinfiltrant pas le muscle)")
    
    with st.form("tvnim_form"):
        stade = st.selectbox("Stade tumoral", ["pTa", "pT1"])
        grade = st.selectbox("Grade tumoral", ["Bas grade", "Haut grade"])
        taille = st.slider("Taille maximale de la tumeur (mm)", 1, 100, 10)
        nombre = st.selectbox("Nombre de tumeurs", ["Unique", "Multiple", "Papillomatose v√©sicale"])
        submitted = st.form_submit_button("üîé G√©n√©rer la conduite √† tenir")
    
    if submitted:
        risque = stratifier_tvnim(stade, grade, taille, nombre)
        traitement, suivi = plan_tvnim(risque)
        
        st.subheader(f"üìä Risque estim√© : {risque.upper()}")
        st.markdown("### üíä Traitement recommand√©")
        for t in traitement: st.markdown("- " + t)
        st.markdown("### üìÖ Modalit√©s de suivi")
        for s in suivi: st.markdown("- " + s)

        # Export PDF
        buffer = io.BytesIO()
        doc = SimpleDocTemplate(buffer)
        styles = getSampleStyleSheet()
        flow = []
        flow.append(Paragraph(f"Conduite √† tenir TVNIM ({risque})", styles["Heading1"]))
        flow.append(Spacer(1,12))
        flow.append(Paragraph("Traitement :", styles["Heading2"]))
        for t in traitement: flow.append(Paragraph("‚Ä¢ " + t, styles["Normal"]))
        flow.append(Spacer(1,12))
        flow.append(Paragraph("Modalit√©s de suivi :", styles["Heading2"]))
        for s in suivi: flow.append(Paragraph("‚Ä¢ " + s, styles["Normal"]))
        doc.build(flow)
        pdf = buffer.getvalue()
        b64 = base64.b64encode(pdf).decode()
        href = f'<a href="data:application/pdf;base64,{b64}" download="CAT_TVNIM.pdf">üì• T√©l√©charger en PDF</a>'
        st.markdown(href, unsafe_allow_html=True)
